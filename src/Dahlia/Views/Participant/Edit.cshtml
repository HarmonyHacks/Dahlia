@using Dahlia;
@using Dahlia.Controllers;
@using Microsoft.Web.Mvc;

@model Dahlia.ViewModels.EditParticipantViewModel

@{
    ViewBag.Title = "Edit Participant";
}

<h2>Edit Participant</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Edit", "Participant"))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Edit Participant</legend>

        @Html.HiddenFor(model => model.Id)

        <label>First Name: </label>@Html.TextBoxFor(x => x.FirstName)<br />
        <label>Last Name: </label>@Html.TextBoxFor(x => x.LastName)<br />
        <label>Date Received: </label>@Html.TextBoxFor(x => x.DateReceived, new { @class = "datepicker" })<br />
        <label>Notes:</label>@Html.TextAreaFor(x => x.Notes)<br />
        <label>Physical Status:</label>@Html.DropDownListForEnumeration(x => x.PhysicalStatus)<br />

        <hr />
        <ul>
            @for (var i = 0; i < Model.CurrentRegistrations.Count(); i++)
            {
                var registration = Model.CurrentRegistrations[i];
                <li>@Html.HiddenFor(x => x.CurrentRegistrations[i].RetreatName) @registration.RetreatName : @Html.DropDownListFor(b => b.CurrentRegistrations[i].BedCode,
                                    new[] { new SelectListItem { Text = "(remove)", Value = "remove" } }.Union(registration.AvailableBedCodes
                                            .Select(x => new SelectListItem { Text = x, Value = x, Selected = x == registration.BedCode })))</li>
            }
        </ul>
        <hr />
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @(Html.ActionLink<RetreatController>(c => c.Index(null), "Back to List"))
</div>

